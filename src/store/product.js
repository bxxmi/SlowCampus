import axios from 'axios'

export default {
  namespaced: true,
  state: () => ({
    // Ï†ÑÏ≤¥ Ï†úÌíà Î¶¨Ïä§Ìä∏
    allProduct: [],
    // Îì±Î°ùÌïú Ï†úÌíàÏù¥ Îã¥Í∏∏ Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞
    productList: [],
    // Íµ¨Îß§Ìïú Ï†úÌíàÎì§Ïù¥ Îã¥Í∏∏ Î∞∞Ïó¥ Îç∞Ïù¥ÌÑ∞
    purchasedProductList: [],
    // Ï†úÌíà ÏÉÅÏÑ∏ Ï†ïÎ≥¥Í∞Ä Îã¥Í∏∏ Í∞ùÏ≤¥ Îç∞Ïù¥ÌÑ∞
    productInfo: {},
    //Íµ¨Îß§Ìï† Ï†úÌíàÏùò Ï†ïÎ≥¥Í∞Ä Îã¥Í∏∏ Í∞ùÏ≤¥ Îç∞Ïù¥ÌÑ∞
    productToOrderInfo: {
      title: '',
      image: '',
      id: '',
      price: 0
    },
    cart: [],
    //ÏóêÎü¨ Î©îÏãúÏßÄ Ï†ÄÏû•
    message: '',
  }),
  getters: {
    // Íµ¨Îß§Ìïú Ï†úÌíà Î¶¨Ïä§Ìä∏ÏóêÏÑú ÎΩëÏïÑÎÇº ÏïÑÏù¥ÎîîÎì§
    getPurchasedProductId(state) {
      return state.purchasedProductList.map(purchased => purchased.detailId)
    }
  },
  mutations: {
    assignState(state, payload) {
      Object.keys(payload).forEach(key => {
        state[key] = payload[key]
      })
    },
    addProduct(state, data) {
      state.productList.push(data)
    },
    setProductToOrderInfo(state, data) {
      const { title, image, id, price } = data
      state.productToOrderInfo.title = title
      state.productToOrderInfo.image = image
      state.productToOrderInfo.id = id
      state.productToOrderInfo.price = price
    },
    resetProductToOrderInfo(state) {
      state.productToOrderInfo.title = ''
      state.productToOrderInfo.image = ''
      state.productToOrderInfo.id = ''
      state.productToOrderInfo.price = 0
    },
    canclePurchasedProduct(state,detailId) {
      const idx = state.purchasedProductList.findIndex(item => item.detailId === detailId)
      state.purchasedProductList[idx].isCanceled = true
    },
    confirmPurchasedProduct(state,detailId) {
      const idx = state.purchasedProductList.findIndex(item => item.detailId === detailId)
      state.purchasedProductList[idx].done = true
    },
    addCart(state,item) {
      state.cart.push(item)
    },
    removeCart(state,id) {
      state.cart = state.cart.filter(item => item.id !== id)
    },
    resetCart(state) {
      state.cart = []
    }
  },
  actions: {
     // Í¥ÄÎ¶¨Ïûê API : Ï†úÌíà Ï∂îÍ∞Ä (ÏôÑÎ£å)
     async addProduct({ commit }, product) {
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products',
        method: 'POST',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2',
          'masterKey': true
        },
        data: {
          'title': product[0].title,
          'price': product[0].price,
          'description': product[0].description,
          'tags': product[0].tags,
          'thumbnailBase64': product[0].thumbnailBase64,
          'photoBase64': product[0].photoBase64
        }
      })
      commit('addProduct', data)
      alert('Ï†úÌíà Ï∂îÍ∞Ä ÏôÑÎ£å')
    },
    // Í¥ÄÎ¶¨Ïûê API: Ï†úÌíà ÏàòÏ†ï
    async editProduct(itemId) {
      const { data } = await axios({
        url: `https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/${itemId}`,
        method: 'PUT',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2',
          'masterKey': 'true'
        },
        data: {
          'price': 2000
        }
      })
    },
    // Í¥ÄÎ¶¨Ïûê API: Ï†ÑÏ≤¥ Ï†úÌíà Ï°∞Ìöå (ÏôÑÎ£å)
    async getAllProduct({ commit }) {
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products',
        method: 'GET',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2',
          'masterKey': true
        }
      })
      commit('assignState', { allProduct: data })
    },
    // Í¥ÄÎ¶¨Ïûê API: Ï†ÑÏ≤¥ ÌåêÎß§ ÎÇ¥Ïó≠
    async soldProductList() {
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/transactions/all',
        method: 'GET',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2',
          'masterKey': 'true'
        }
      })
    },
    // Í≥µÏö© API: Îã®Ïùº Ï†úÌíà ÏÉÅÏÑ∏ Ï°∞Ìöå (ÏôÑÎ£å)
    async detailProduct({ commit }, itemId) {
      const { data } = await axios({
        url: `https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/${itemId.id}`,
        method: 'GET',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2'
        }
      })
      commit('assignState', { productInfo: data })
    },
    // ÏÇ¨Ïö©Ïûê API: Ï†úÌíà Í≤ÄÏÉâ - ÌÇ§ÏõåÎìú (ÏôÑÎ£å) 
    async searchProduct({ commit }, payload) {
      const { productName } = payload
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/search',
        method: 'POST',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2'
        }
      })
      const result = data.filter(name => name.title.includes(productName))
      if (Object.keys(result).length === 0) {
        alert('Í≤ÄÏÉâÌïòÏã† Í∞ïÏùòÎäî Ï°¥Ïû¨ÌïòÏßÄ ÏïäÏäµÎãàÎã§. üò≠')
        return
      }
      commit('assignState', { allProduct: result})
    },
    // ÏÇ¨Ïö©Ïûê API: Ï†úÌíà Í≤ÄÏÉâ - ÌÉúÍ∑∏ (ÏôÑÎ£å) 
    async searchTag({ commit }, payload) {
      const { tagName } = payload
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/search',
        method: 'POST',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2'
        }
      })
      const result = data.filter(name => name.tags === tagName)
      commit('assignState', { allProduct: result })
    },
    // ÏÇ¨Ïö©Ïûê API : Ï†úÌíà Íµ¨Îß§ Ïã†Ï≤≠
    async requestOrder({ commit },input) {
      const { username, authorization, productId, accountId } = input
  
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/buy',
        method: 'POST',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          username,
          authorization
        },
        data: {
          productId,
          accountId
        }
      })
    },
    // ÏÇ¨Ïö©Ïûê API : Íµ¨Îß§ Ï∑®ÏÜå
    async cancelOrder({ commit }, input) {
      const { username,authorization,detailId } = input

      try {
        const { data } = await axios({
          url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/cancel',
          method: 'POST',
          headers: {
            'content-type': 'application/json',
            'apikey': 'FcKdtJs202110',
            username,
            authorization
          },
          data: {
            detailId
          }
        })

        if(data){
          commit('canclePurchasedProduct',detailId)
        }
      } catch (e) {
        commit('assignState',{
          message: e.message
        })
      }
    },
    // ÏÇ¨Ïö©Ïûê API : Íµ¨Îß§ ÌôïÏ†ï
    async confirmOrder({ commit }, input) {
      const { username,authorization,detailId } = input

      try {
        const { data } = await axios({
          url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/ok',
          method: 'POST',
          headers: {
            'content-type': 'application/json',
            'apikey': 'FcKdtJs202110',
            username,
            authorization
          },
          data: {
            detailId
          }
        })

        if(data){
          commit('canclePurchasedProduct',detailId)
        }
      } catch (e) {
        commit('assignState',{
          message: e.message
        })
      }
    },
    // ÏÇ¨Ïö©Ïûê API : ÏÇ¨Ïö©ÏûêÍ∞Ä Íµ¨Îß§Ìïú Ï†úÌíà Ï†ÑÏ≤¥ ÎÇ¥Ïó≠(Íµ¨Îß§ Ï∑®ÏÜå ÎÇ¥Ïó≠ÍπåÏßÄ Ï∂úÎ†•)
    async allBuyInfo({ commit }, input) {
      const { username , authorization } = input

      commit('assignState',{
        purchasedProductList: []
      })

      try {
        const { data } = await axios({
          url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/transactions/details',
          method: 'GET',
          headers: {
            'content-type': 'application/json',
            'apikey': 'FcKdtJs202110',
            username,
            authorization
          }
        })
  
        commit('assignState',{
          purchasedProductList: data
        })
      } catch (e) {
        commit('assignState',{
          message: e.message
        })
      }
    },
    // ÏÇ¨Ïö©Ïûê API : Îã®Ïùº Ï†úÌíà Íµ¨Îß§ Ï†ïÎ≥¥ ÏÉÅÏÑ∏ Î≥¥Í∏∞ 
    async detailBuyInfo(itemId) {
      const accessToken = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InFEM2M0dnp3RXByS2hrOExtWU9GIiwiaWF0IjoxNjM2NzI2MzE3LCJleHAiOjE2MzY4MTI3MTcsImlzcyI6InRoZXNlY29uQGdtYWlsLmNvbSJ9.x-gfpmPzEnEKWL2nHq8H_LO32lLsy2rNBLVSSk-oeBI'
      const { data } = await axios({
        url: 'https://asia-northeast3-heropy-api.cloudfunctions.net/api/products/transactions/detail',
        method: 'POST',
        headers: {
          'content-type': 'application/json',
          'apikey': 'FcKdtJs202110',
          'username': 'adminteam2',
          authorization: `Bearer ${accessToken}`
        },
        data: {
          detailId: itemId
        }
      }) 
    }
  }
}
